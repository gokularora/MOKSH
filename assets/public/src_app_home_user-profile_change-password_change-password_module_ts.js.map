{"version":3,"sources":["./src/app/helper/must-match.ts","./src/app/home/user-profile/change-password/change-password-routing.module.ts","./src/app/home/user-profile/change-password/change-password.module.ts","./src/app/home/user-profile/change-password/change-password.page.ts","./src/app/home/user-profile/change-password/change-password.page.scss","./src/app/home/user-profile/change-password/change-password.page.html"],"names":[],"mappings":"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","file":"src_app_home_user-profile_change-password_change-password_module_ts.js","sourcesContent":["import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ChangePasswordPage } from './change-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChangePasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ChangePasswordPageRoutingModule {}\r\n","import { ComponentsModule } from 'src/app/components/components.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ChangePasswordPageRoutingModule } from './change-password-routing.module';\r\n\r\nimport { ChangePasswordPage } from './change-password.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    ChangePasswordPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [ChangePasswordPage]\r\n})\r\nexport class ChangePasswordPageModule {}\r\n","import { HeaderTitleService } from './../../../services/header-title.service';\r\nimport { AuthService } from './../../../services/auth.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MustMatch } from 'src/app/helper/must-match';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.page.html',\r\n  styleUrls: ['./change-password.page.scss'],\r\n})\r\nexport class ChangePasswordPage implements OnInit {\r\n\r\n  ionicForm: FormGroup;\r\n  isSubmitted = false;\r\n  CurrentDateTime = \"\";\r\n  isLoading : boolean;\r\n  appLoginID=0;\r\n\r\n  constructor(\r\n    private headerTitleService : HeaderTitleService,\r\n    public formBuilder: FormBuilder,\r\n    public toastr : ToastService,\r\n    private auth : AuthService\r\n  ) {\r\n    this.headerTitleService.title=\"Change Password\";\r\n    this.headerTitleService.isBack=true;    \r\n   }\r\n\r\n  ngOnInit() {\r\n    this.getUserData();    \r\n    this.initForm();\r\n    \r\n  }\r\n\r\n  initForm() {\r\n    this.ionicForm = this.formBuilder.group({\r\n      \r\n      CurrentPassword: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(18)]],\r\n      Password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(18)]],\r\n      RePassword: ['', [Validators.required]]      \r\n    },{\r\n      validators: MustMatch('Password', 'RePassword')\r\n    })\r\n  }\r\n  get errorControl() {\r\n    return this.ionicForm.controls;\r\n  }\r\n\r\n \r\n\r\n  async getUserData(){\r\n    await this.auth.userData$.subscribe((resp:any) => {      \r\n      //this.arrStorageUserData = resp;          \r\n      this.appLoginID = resp.appLoginID;\r\n    })\r\n  }\r\n\r\n  async submitForm() {    \r\n    this.isLoading = true;\r\n    this.isSubmitted = true;\r\n    if (!this.ionicForm.valid) {\r\n      console.log('Please provide all the required values!')\r\n      return false;\r\n    }\r\n    else {\r\n      var postData = {'appLoginID':this.appLoginID, 'password':this.ionicForm.value.Password}\r\n      this.auth.changePassword(JSON.stringify(postData)).then(resp => {        \r\n        this.toastr.toastSuccess(\"Password Updated successfully!\");        \r\n        this.isLoading = false;   \r\n      })\r\n        .catch(err => {\r\n          console.log(\"Change Passwod ==> \" + err);\r\n          this.ionicForm.invalid;                    \r\n          this.isLoading = false;\r\n        })\r\n    }\r\n  }\r\n  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFuZ2UtcGFzc3dvcmQucGFnZS5zY3NzIn0= */\";","export default \"<app-header></app-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form class=\\\"form-cont no-icon\\\" [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\r\\n    \\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.CurrentPassword.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"lock-closed-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Current Password</ion-label>\\r\\n            <ion-input maxlength=\\\"18\\\" size=\\\"large\\\" name=\\\"username\\\" type=\\\"password\\\" required formControlName=\\\"CurrentPassword\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.CurrentPassword.errors?.minlength\\\">Please Enter Valid Password</span>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.CurrentPassword.errors?.maxlength\\\">Please Enter Valid Password</span>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.Password.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"lock-closed-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">New Password</ion-label>\\r\\n            <ion-input maxlength=\\\"18\\\" size=\\\"large\\\" name=\\\"username\\\" type=\\\"password\\\" required formControlName=\\\"Password\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.Password.errors?.minlength\\\">Please Enter Valid Password</span>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.Password.errors?.maxlength\\\">Please Enter Valid Password</span>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.RePassword.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"lock-closed-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Re-Enter Password</ion-label>\\r\\n            <ion-input maxlength=\\\"18\\\" size=\\\"large\\\" name=\\\"username\\\" type=\\\"password\\\" formControlName=\\\"RePassword\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <!-- <div *ngIf=\\\"IsSubmitted && errorControl.RePassword.errors\\\" class=\\\"required\\\">            \\r\\n            <div *ngIf=\\\"errorControl.RePassword.errors.mustMatch\\\">Passwords must match</div>\\r\\n        </div> -->\\r\\n        <span class=\\\"error\\\" *ngIf=\\\"errorControl.RePassword.errors?.mustMatch\\\">Password must match</span>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n    <section class=\\\"btn-cont\\\">\\r\\n      <ion-button size=\\\"large\\\" expand=\\\"block\\\" color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!ionicForm.valid\\\">Save\\r\\n        <ion-ripple-effect></ion-ripple-effect>\\r\\n        <ion-spinner name=\\\"dots\\\" slot=\\\"end\\\" *ngIf=\\\"isLoading\\\"></ion-spinner>\\r\\n      </ion-button>\\r\\n    </section>\\r\\n  </form>\\r\\n</ion-content>\\r\\n<app-footer></app-footer>\\r\\n\";"],"sourceRoot":"webpack:///"}