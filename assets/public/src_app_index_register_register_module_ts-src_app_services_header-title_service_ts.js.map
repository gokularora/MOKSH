{"version":3,"sources":["./src/app/index/register/register-routing.module.ts","./src/app/index/register/register.module.ts","./src/app/index/register/register.page.ts","./src/app/services/header-title.service.ts","./src/app/services/loader.service.ts","./src/app/index/register/register.page.scss","./src/app/index/register/register.page.html"],"names":[],"mappings":"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","file":"src_app_index_register_register_module_ts-src_app_services_header-title_service_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { ComponentsModule } from 'src/app/components/components.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","\r\nimport { AlertController } from '@ionic/angular';\r\nimport { ApiGeneralService } from './../../services/api-general.service';\r\nimport { ApiCRMService } from 'src/app/services/api-crm.service';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { LoaderService } from 'src/app/services/loader.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Device } from '@capacitor/device';\r\nimport { AppVersion } from '@ionic-native/app-version/ngx';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { DeviceAccounts } from '@ionic-native/device-accounts/ngx';\r\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\r\n\r\ndeclare var require: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  ionicForm: FormGroup;\r\n  isSubmitted = false;\r\n  isDuplicate = false;\r\n  CurrentDateTime = \"\";\r\n  isLoading: boolean;\r\n  LeadID = 0;\r\n  postData = {};\r\n  arrResCountry = [];\r\n  arrResState = [];\r\n  arrResCity = [];\r\n  isIndia: boolean;\r\n  countryId = 0;\r\n  ipAddress = \"\";\r\n  passwordType = \"password\";\r\n  passwordIcon = \"eye-outline\";\r\n  isPwVisible = false;\r\n  arrRawExistingData = \"\";\r\n\r\n  arrReferral = [];\r\n  appCodeVersion: any;\r\n  uniqueId = \"\";\r\n  arrCRMLeadSource = [];\r\n  isEmailRead: boolean = true;\r\n\r\n  constructor(public formBuilder: FormBuilder,\r\n    private auth: AuthService,\r\n    private toastr: ToastService,\r\n    private loader: LoaderService,\r\n    private notification: NotificationService,\r\n    private router: Router,\r\n    private apiCRMService: ApiCRMService,\r\n    private apiGeneral: ApiGeneralService,\r\n    private appVersion: AppVersion,\r\n    private deviceAccounts: DeviceAccounts,    \r\n    private alertController: AlertController,    \r\n    private firebaseAnalytics : FirebaseAnalytics\r\n    \r\n  ) {\r\n    this.CurrentDateTime = new Date().toJSON(\"yyyy/MM/dd HH:mm\");\r\n  }\r\n  ionViewWillEnter() {\r\n    this.auth.isTimeOut == false; \r\n    this.firebaseAnalytics.setCurrentScreen(\"Register\");    \r\n  }\r\n  ngOnInit() {\r\n    this.auth.isTimeOut == false;\r\n    this.initForm();\r\n    //this.getgeolocationCountry();\r\n    this.getIpAddress();\r\n    this.getCRMLeadSource();\r\n\r\n    Device.getId().then(resp => {\r\n      this.uniqueId = resp[\"uuid\"];\r\n    });\r\n    this.appVersion.getVersionNumber().then(resp => { this.appCodeVersion = resp });\r\n  }\r\n\r\n  //#region  Country, State, City\r\n  getResCountry() {\r\n    let postData = { \"countryID\": 102, \"IsActive\": true };\r\n    this.apiGeneral.getResCountry(JSON.stringify(postData)).then(resp => {\r\n      this.arrResCountry = resp;\r\n    }).catch(err => {\r\n      console.log(\"getResCountry: \" + err);\r\n    })\r\n  }\r\n  async getResState($event, _countryID) {\r\n    let countryID = ($event == \"\") ? _countryID : $event.target.value;\r\n    let postData = { \"IsActive\": true, \"countryID\": countryID };\r\n    await this.apiGeneral.getResState(JSON.stringify(postData)).then(resp => {\r\n      this.arrResState = resp;\r\n    }).catch(err => {\r\n      console.log(\"getResState: \" + err);\r\n    })\r\n  }\r\n  async getResCity($event, _stateID) {\r\n    let stateID = ($event == \"\") ? _stateID : $event.target.value;\r\n    let postData = { \"IsActive\": true, \"stateID\": stateID };\r\n    await this.apiGeneral.getResCity(JSON.stringify(postData)).then(resp => {\r\n      this.arrResCity = resp;\r\n    }).catch(err => {\r\n      console.log(\"getResCity: \" + err);\r\n    })\r\n  }\r\n  getgeolocationCountry() {\r\n    this.apiGeneral.getGeolocation().then(resp => {\r\n      console.log(resp);\r\n      if (resp.country_code2 == \"IN\") {\r\n        this.isIndia = true;\r\n        this.getResState(\"\", 102);\r\n        this.countryId = 102;\r\n      }\r\n      else {\r\n        this.countryId = 0;\r\n        this.isIndia = false;\r\n        this.getResCountry();\r\n      }\r\n    })\r\n  }\r\n  //#endregion\r\n\r\n  //#region Get Emails from device\r\n  onClickEmail() {\r\n    if (this.ionicForm.value.EmailID == \"\" && this.isEmailRead == true) {\r\n      this.getDeviceAccount();\r\n    }\r\n  }\r\n  getDeviceAccount() {\r\n    this.deviceAccounts.get().then(respGet => {\r\n      if (respGet) {\r\n        if (respGet.length > 1) {\r\n          var obj = [];\r\n          var index = 0;\r\n          respGet.forEach(el => {\r\n            index++;\r\n            obj.push({ 'name': 'radio' + index, 'type': 'radio', 'label': el[\"name\"], 'value': el[\"name\"] });\r\n          });\r\n          this.presentAlertRadio(obj);\r\n        }\r\n        else {\r\n          this.deviceAccounts.getPermissions().then(respPerm => {\r\n            this.deviceAccounts.get().then(respGet2 => {\r\n              console.log(\"Selected Email: \" + respGet2[0][\"name\"]);\r\n              this.ionicForm.controls.EmailID.setValue(respGet2[0][\"name\"]);\r\n            })\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n  async presentAlertRadio(obj) {\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'my-custom-class',\r\n      inputs: obj,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            this.isEmailRead = false;\r\n          }\r\n        }, {\r\n          text: 'Ok',\r\n          handler: (res) => {\r\n            console.log(\"Selected Email: \" + res);\r\n            this.ionicForm.controls.EmailID.setValue(res);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n  //#endregion\r\n\r\n  //#region getSimIfno\r\n  /*\r\n  getSimInfo() {\r\n    this.sim.hasReadPermission().then((respHasPerm) => {\r\n      console.log(\"hasReadPermission: \" + respHasPerm)\r\n      if (respHasPerm == false) {\r\n        this.sim.requestReadPermission().then(\r\n          () => {\r\n            console.log('Permission granted');\r\n            this.sim.getSimInfo().then(\r\n              (info) => console.log('Sim info: ', info),\r\n              (err) => console.log('Unable to get sim info: ', err)\r\n            );\r\n          },\r\n          () => console.log('Permission denied')\r\n        );\r\n      }\r\n      else {\r\n        this.sim.getSimInfo().then(\r\n          (info) => console.log('Sim info: ', info),\r\n          (err) => console.log('Unable to get sim info: ', err)\r\n        );\r\n      }\r\n    });\r\n  }*/\r\n  //#endregion\r\n\r\n  initForm() {\r\n    this.ionicForm = this.formBuilder.group({\r\n      FirstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\r\n      LastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\r\n      EmailID: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\r\n      MobileNo: ['', [Validators.required, Validators.pattern('^([0-9]{10})$')]],\r\n      Password: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(18)]],\r\n      //RePassword: ['', [Validators.required]],\r\n      //IsAgree: [null, [Validators.required]],\r\n      // countryID: [''],\r\n      // stateID: ['', [Validators.required]],\r\n      // districtID: ['', [Validators.required]],\r\n      referralCode: [''],\r\n    }\r\n    )\r\n  }\r\n  get errorControl() {\r\n    return this.ionicForm.controls;\r\n  }\r\n  async setRegistration() {\r\n    this.postData = {\r\n      \"leadID\": 0,\r\n      \"rawLeadID\": 0,\r\n      \"applicationID\": 0,\r\n      \"firstName\": this.ionicForm.value.FirstName.toString().trim(),\r\n      \"lastName\": this.ionicForm.value.LastName.toString().trim(),\r\n      \"emailID\": this.ionicForm.value.EmailID.toString().trim(),\r\n      // \"countryID\": this.countryId,\r\n      // \"stateID\": (this.ionicForm.value.stateID == \"\") ? null : this.ionicForm.value.stateID,\r\n      // \"districtID\": (this.ionicForm.value.districtID == \"\") ? null : this.ionicForm.value.districtID,\r\n      \"password\": this.ionicForm.value.Password.toString().trim(),\r\n      \"mobileNo\": \"+91\" + this.ionicForm.value.MobileNo.toString().trim(),\r\n      \"branchId\": 1,\r\n      \"referralId\": null,\r\n      \"version\": this.appCodeVersion,\r\n      \"registeredIMEI\": this.uniqueId,\r\n      \"isActive\": true,\r\n      \"createdIp\": this.ipAddress,\r\n      \"modifiedIp\": this.ipAddress,\r\n      \"createdBy\": \"MobileApp\",\r\n      \"modifiedBy\": \"MobileApp\",\r\n      \"createdDate\": this.apiGeneral.getCurrentDateTime(),\r\n      \"modifiedDate\": this.apiGeneral.getCurrentDateTime()\r\n    }\r\n    await this.updateCRMIfNoRaw();\r\n\r\n    var otpGenerator = require('otp-generator');\r\n    var otp = otpGenerator.generate(4, { upperCase: false, alphabets: false, specialChars: false });\r\n    console.log(otp);\r\n    this.auth.OTP = otp; // set in service\r\n    var messageBody = \"Hi, \" + otp + \" is One Time Password (OTP) for MOKSH registration. Please enter the OTP to continue registration.\";\r\n    var subject = \"MOKSH Registration - One Time Password (OTP)\";\r\n    let postSmsData = { \"MobileNo\": this.ionicForm.value.MobileNo.toString(), \"MessageBody\": messageBody };\r\n    this.sendSMS(postSmsData);\r\n    var emailmessageBody = \"Hi, \\n\\n Your One Time Password is \" + otp + \" to register for the MOKSH Career Planner App . Please enter this OTP and complete the registration process in the Mobile App. \\n\\n Hope you enjoy using this passionately created mobile app:)\";\r\n    this.sendEmail(subject, emailmessageBody, this.ionicForm.value.EmailID.toString());\r\n\r\n    this.auth.arrRegistrationData = JSON.stringify(this.postData);\r\n\r\n    this.firebaseAnalytics.logEvent(\"register\",{ action : 'started', page:'register'});    \r\n\r\n    this.router.navigate(['/otp-verification']);\r\n    this.isLoading = false;\r\n    setTimeout(() => {\r\n      console.log(\"Reg Data : \" + JSON.stringify(this.postData))\r\n    }, 3000);\r\n  }\r\n  async submitForm() {\r\n    this.isLoading = true;\r\n    this.isSubmitted = true;\r\n    if (!this.ionicForm.valid) {\r\n      console.log('Please provide all the required values!')\r\n      return false;\r\n    }\r\n    else {\r\n      this.resetData();\r\n      let postData = { \"EmailID\": this.ionicForm.value.EmailID, \"MobileNo\": \"+91\" + this.ionicForm.value.MobileNo }\r\n      await this.auth.checkDuplicates(JSON.stringify(postData)).then(resp => {\r\n        if (resp.statusCode == 200) {\r\n          if (this.ionicForm.value.referralCode != \"\") {\r\n            this.getReferrral();\r\n          }\r\n          else {\r\n            this.setRegistration();\r\n          }\r\n          this.isLoading = false;\r\n        }\r\n        else if (resp.statusCode == 409) {\r\n          this.toastr.toastError(resp.status);\r\n          this.isLoading = false;\r\n          this.ionicForm.invalid;\r\n          return false;\r\n        }\r\n      }).catch(err => {\r\n        this.toastr.toastError(err.error.status);\r\n        this.sendEmail(\"Career Planner => Error = > Registration\", JSON.stringify(err), \"xeraedtech@gmail.com\");\r\n        this.ionicForm.invalid;\r\n        this.isLoading = false;\r\n        return false;\r\n      })\r\n    }\r\n  }\r\n  //#region Email SMS\r\n  sendSMS(postData) {\r\n    this.notification.sendSMS(JSON.stringify(postData)).then(resp => {\r\n      console.log(resp.status);\r\n      this.toastr.toastSuccess(\"OTP Sent Successfully!\");\r\n      this.auth.isTimeOut = false;\r\n      this.router.navigate(['/otp-verification']);\r\n    })\r\n      .catch(err => {\r\n        console.log(err.title);\r\n        this.toastr.toastError(\"OTP not sent due to some technical problem. Please try after some time\");\r\n      })\r\n  }\r\n  sendEmail(subject, messageBody, emailId) {\r\n    let postData = { \"Subject\": subject, \"MessageBody\": messageBody, \"ToAddress\": emailId };\r\n    this.notification.sendEmail(JSON.stringify(postData)).then(resp => {\r\n      console.log(resp.status);\r\n      //this.toastr.toastSuccess(\"OTP sent successfully!\");\r\n      this.auth.isTimeOut = false;\r\n      this.router.navigate(['/otp-verification']);\r\n    })\r\n      .catch(err => {\r\n        console.log(err.title);\r\n        this.toastr.toastError(\"Email not sent due to some technical problem. Please try after some time\");\r\n      })\r\n  }\r\n  //#endregion\r\n\r\n\r\n  getReferrral() {\r\n    let postData = { \"referralCode\": this.ionicForm.value.referralCode };\r\n    this.auth.getReferral(JSON.stringify(postData)).then(resp => {\r\n      this.setRegistration();\r\n      this.arrReferral = resp;\r\n      console.log(this.arrReferral);\r\n      if (resp.length > 0) {\r\n        if (this.arrReferral[0][\"referenceType\"] == \"Student\") {\r\n          this.postData[\"referralId\"] = this.arrReferral[0][\"referralId\"];\r\n        }\r\n        if (this.arrReferral[0][\"referenceType\"] == \"Branch\" || this.arrReferral[0][\"referenceType\"] == \"Associates\") {\r\n          this.postData[\"branchId\"] = this.arrReferral[0][\"branchId\"];\r\n        }\r\n      }\r\n    }).catch(err => {\r\n      console.log(\"getReferrral: \" + err);\r\n    })\r\n  }\r\n\r\n  resetData(){\r\n    this.apiCRMService.resetArrRawPosData();\r\n    this.apiCRMService.resetArrLeadPosData();\r\n  }\r\n  //#region CRM \r\n  async setCRMRawData() {    \r\n    var arrPostdata = this.apiCRMService.arrCRMRawData;\r\n    arrPostdata[\"rawLeadId\"] = 0;\r\n    arrPostdata[\"fname\"] = this.ionicForm.value.FirstName.toString().trim();\r\n    arrPostdata[\"lname\"] = this.ionicForm.value.LastName.toString().trim();\r\n    arrPostdata[\"contactWhatsappCode\"] = \"91\";\r\n    arrPostdata[\"contactWhatsapp\"] = this.ionicForm.value.MobileNo.toString().trim();\r\n    arrPostdata[\"contactOtherCode\"] = \"91\";\r\n    arrPostdata[\"contactOther\"] = this.ionicForm.value.MobileNo.toString().trim();\r\n    arrPostdata[\"emailId\"] = this.ionicForm.value.EmailID.toString().trim();\r\n    //arrPostdata[\"DistrictID\"] = this.ionicForm.value.districtID;\r\n    //arrPostdata[\"StateID\"] = this.ionicForm.value.stateID;\r\n    arrPostdata[\"leadSourceId\"] = environment.defaultLeadSourceId;\r\n    arrPostdata[\"leadPriorityId\"] = \"3\";\r\n    arrPostdata[\"productDepartmentId\"] = this.apiCRMService.ProductDepartmentMBBS;\r\n    arrPostdata[\"subProductDepartmentId\"] = this.apiCRMService.ProductSubDepartmentMBBSIndia;\r\n    arrPostdata[\"franchiseeId\"] = \"1\";\r\n    if (this.arrReferral.length > 0) {\r\n      if (this.arrReferral[0][\"referenceType\"] == \"Branch\") {\r\n        arrPostdata[\"franchiseeId\"] = this.arrReferral[0][\"branchId\"];\r\n      }\r\n      if (this.arrReferral[0][\"referenceType\"] == \"Associates\") {\r\n        arrPostdata[\"empId\"] = this.arrReferral[0][\"empID\"];\r\n        arrPostdata[\"franchiseeId\"] = this.arrReferral[0][\"branchId\"];\r\n      }\r\n    }\r\n    arrPostdata[\"createdBy\"] = \"MobileApp\";\r\n    arrPostdata[\"createdDate\"] = this.apiGeneral.getCurrentDateTime();\r\n    arrPostdata[\"modifiedBy\"] = \"MobileApp\";\r\n    arrPostdata[\"modifiedDate\"] = this.apiGeneral.getCurrentDateTime();\r\n    arrPostdata[\"createdIp\"] = this.ipAddress;\r\n    arrPostdata[\"modifiedIp\"] = this.ipAddress;\r\n    arrPostdata[\"isActive\"] = true;\r\n    arrPostdata[\"isMobilityApp\"] = true;\r\n    await this.apiCRMService.setCRMRawData(JSON.stringify(arrPostdata)).then(resp => { \r\n      if (resp.statusCode == 200) {\r\n        var arrData = resp.result;        \r\n        this.postData[\"rawLeadID\"] = (arrData[\"rawLeadId\"] == undefined) ? 0 : parseInt(arrData[\"rawLeadId\"]);\r\n        this.postData[\"leadID\"] = (arrData[\"leadId\"] == undefined) ? 0 : parseInt(arrData[\"leadId\"]);\r\n        if (this.arrReferral.length > 0) {\r\n          this.postData[\"branchId\"] = this.arrReferral[0][\"branchId\"];\r\n          this.postData[\"referralId\"] = this.arrReferral[0][\"referralId\"];\r\n        }\r\n        this.auth.arrRegistrationData = JSON.stringify(this.postData); // set in service\r\n      }\r\n    }).catch(ex => {\r\n      console.log(ex);\r\n      this.toastr.toastError(\"Sorry! Unable to process your request. We are working on it. Please try after sometime\")\r\n      this.loader.loadingDismiss();\r\n      this.isLoading = false;\r\n    })\r\n  }\r\n  updateCRMIfNoRaw() {\r\n    var mobileNo = this.postData[\"mobileNo\"].replace('+91', '');\r\n    var emailId = this.postData[\"emailID\"];\r\n    this.apiCRMService.fnCheckDuplicateLead(mobileNo, emailId).then(respLead => {\r\n      console.log(\"lead: \" + respLead);\r\n      if (respLead == 0) {\r\n        this.apiCRMService.fnCheckDuplicateRawLead(mobileNo, emailId).then(respRaw => {\r\n          console.log(\"raw: \" + respRaw);\r\n          if (respRaw != 0) {\r\n            this.postData[\"leadID\"] = 0;\r\n            this.postData[\"rawLeadID\"] = respRaw[\"rawLeadId\"];\r\n            this.postData[\"branchId\"] = respRaw[\"franchiseeId\"];\r\n            var leadSource = (this.arrCRMLeadSource.filter(x => x.LeadSourceID == respRaw[\"leadSourceId\"]))[0][\"LeadSource\"];\r\n            if (leadSource == 'MOKSH Mobility App') {\r\n              leadSource = 'MobileApp';\r\n            }\r\n            this.postData[\"createdBy\"] = leadSource;\r\n            this.postData[\"modifiedBy\"] = leadSource;\r\n            this.auth.arrRegistrationData = JSON.stringify(this.postData);\r\n            this.updateCRMRawData(respRaw[\"rawLeadId\"]);\r\n          }\r\n          else {\r\n            this.setCRMRawData();\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        this.postData[\"leadID\"] = respLead[\"leadId\"];\r\n        this.postData[\"branchId\"] = respLead[\"franchiseeId\"];\r\n        this.postData[\"rawLeadID\"] = (respLead[\"rawLeadId\"]) == null ? 0 : respLead[\"rawLeadId\"];\r\n        var leadSource = (this.arrCRMLeadSource.filter(x => x.LeadSourceID == respLead[\"leadSourceId\"]))[0][\"LeadSource\"];\r\n        if (leadSource == 'MOKSH Mobility App') {\r\n          leadSource = 'MobileApp';\r\n        }\r\n        this.postData[\"createdBy\"] = leadSource;\r\n        this.postData[\"modifiedBy\"] = leadSource;\r\n        this.auth.arrRegistrationData = JSON.stringify(this.postData);\r\n        if (this.postData[\"rawLeadID\"] != 0) {\r\n          this.updateCRMRawData(this.postData[\"rawLeadID\"]);\r\n        }\r\n      }\r\n    })\r\n  }\r\n  updateCRMRawData(rawLeadID) {\r\n    this.apiCRMService.fnGetCRMRawData(rawLeadID).then(resp => {\r\n      if (resp == true) {\r\n        if (this.arrReferral.length > 0 && this.postData[\"leadID\"] == 0 && this.arrReferral[0][\"referenceType\"] == \"Branch\") {\r\n          this.apiCRMService.arrCRMRawData[\"franchiseeId\"] = this.arrReferral[0][\"branchId\"];\r\n          this.postData[\"branchId\"] = this.arrReferral[0][\"branchId\"];\r\n        }\r\n        if (this.arrReferral.length > 0 && this.postData[\"leadID\"] == 0 && this.arrReferral[0][\"referenceType\"] == \"Associates\") {\r\n          this.apiCRMService.arrCRMRawData[\"empId\"] = this.arrReferral[0][\"empID\"];\r\n          this.apiCRMService.arrCRMRawData[\"franchiseeId\"] = this.arrReferral[0][\"branchId\"];\r\n          this.postData[\"branchId\"] = this.arrReferral[0][\"branchId\"];\r\n        }\r\n        this.apiCRMService.arrCRMRawData[\"isMobilityApp\"] = true;\r\n        this.apiCRMService.arrCRMRawData[\"emailId\"] = this.postData[\"emailID\"];\r\n        //this.apiCRMService.arrCRMRawData[\"StateID\"] = this.postData[\"stateID\"];\r\n        //this.apiCRMService.arrCRMRawData[\"DistrictID\"] = this.postData[\"districtID\"];\r\n        this.apiCRMService.fnSetCRMRawData();\r\n      }\r\n    });\r\n  }\r\n  getCRMLeadSource() {\r\n    let postData = { 'LeadSourceID': '', 'franchiseeID': '1' }\r\n    this.apiCRMService.getLeadSource(JSON.stringify(postData)).then(resp => {\r\n      resp = JSON.parse(resp.d);\r\n      if (resp.length > 0) {\r\n        this.arrCRMLeadSource = resp;\r\n      }\r\n    })\r\n  }\r\n  //#endregion\r\n\r\n  onClickPassword() {\r\n    this.isPwVisible = !this.isPwVisible;\r\n    this.passwordType = (this.isPwVisible == true) ? \"text\" : \"password\";\r\n    this.passwordIcon = (this.isPwVisible == true) ? \"eye-off-outline\" : \"eye-outline\";\r\n  }\r\n\r\n  //#region General FUnction\r\n  async getIpAddress() { await this.apiGeneral.getIPAddress().then(ip => { this.ipAddress = ip.ip }) }\r\n  //#endregion\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderTitleService {\r\n  title=\"\";\r\n  isBack : boolean = false;\r\n  isMenu : boolean = true;\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n\r\n  constructor(public loadingController: LoadingController) { }\r\n\r\n  async presentLoading() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Please wait...',\r\n      duration: 7000,\r\n      cssClass:'custom-loader',\r\n      spinner:'lines'\r\n    });\r\n    await loading.present();\r\n\r\n    const { role, data } = await loading.onDidDismiss();\r\n    console.log('Loading dismissed!');\r\n  }\r\n\r\n  async loadingDismiss() {\r\n    setTimeout(() => {\r\n      return this.loadingController.dismiss();\r\n    }, 0);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header >\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"index/login\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title></ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"pb-0\\\">\\r\\n  <form class=\\\"form-cont\\\" [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\r\\n     <h4 class=\\\"text-center mb-0\\\">Setup your Profile</h4>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.FirstName.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"person-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">First Name <ion-text color=\\\"primary\\\">*</ion-text></ion-label>            \\r\\n            <ion-input maxlength=\\\"50\\\"  name=\\\"username\\\" type=\\\"text\\\" formControlName=\\\"FirstName\\\" required></ion-input>            \\r\\n          </ion-item>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.FirstName.errors?.minlength\\\">Valid First Name Required</span>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.FirstName.errors?.maxlength\\\">Valid First Name Required</span>          \\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.LastName.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"person-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Last Name <ion-text color=\\\"primary\\\">*</ion-text></ion-label>\\r\\n            <ion-input maxlength=\\\"50\\\"  name=\\\"username\\\" type=\\\"text\\\" formControlName=\\\"LastName\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.LastName.errors?.minlength\\\">Valid Last Name Required</span>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.LastName.errors?.maxlength\\\">Valid First Name Required</span>          \\r\\n        </ion-col>\\r\\n      </ion-row>     \\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.MobileNo.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"call-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Mobile No. <ion-text color=\\\"primary\\\">*</ion-text></ion-label>\\r\\n            <ion-input maxlength=\\\"12\\\"  name=\\\"username\\\" type=\\\"number\\\" formControlName=\\\"MobileNo\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.MobileNo.errors?.pattern\\\">Please provide valid Mobile No.</span>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.EmailID.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"mail-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Email ID (For Scholarship Aspirants) <ion-text color=\\\"primary\\\">*</ion-text></ion-label>\\r\\n            <ion-input maxlength=\\\"60\\\"  name=\\\"username\\\" type=\\\"email\\\" formControlName=\\\"EmailID\\\" (ionFocus)=\\\"onClickEmail()\\\" ></ion-input>\\r\\n          </ion-item>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.EmailID.errors?.pattern\\\">Please provide valid Email ID</span>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--\\r\\n      <ion-row *ngIf=\\\"!isIndia\\\">\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.countryID.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"location-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Country <ion-text color=\\\"primary\\\">*</ion-text></ion-label>\\r\\n            <ion-select formControlName=\\\"countryID\\\" interface=\\\"action-sheet\\\" (ionChange)=\\\"getResState($event,'')\\\">\\r\\n              <ion-select-option [value]=\\\"val.countryId\\\" *ngFor=\\\"let val of arrResCountry\\\">{{val.countryName}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>          \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.stateID.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"location-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">State <ion-text color=\\\"primary\\\">*</ion-text></ion-label>\\r\\n            <ion-select formControlName=\\\"stateID\\\" interface=\\\"action-sheet\\\" (ionChange)=\\\"getResCity($event,'')\\\">\\r\\n              <ion-select-option [value]=\\\"val.stateId\\\" *ngFor=\\\"let val of arrResState\\\">{{val.stateName}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>          \\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.districtID.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"location-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">City <ion-text color=\\\"primary\\\">*</ion-text></ion-label>\\r\\n            <ion-select formControlName=\\\"districtID\\\" interface=\\\"action-sheet\\\">\\r\\n              <ion-select-option [value]=\\\"val.districtId\\\" *ngFor=\\\"let val of arrResCity\\\">{{val.districtName}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>          \\r\\n        </ion-col>\\r\\n      </ion-row>  \\r\\n      -->    \\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.Password.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"lock-closed-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Password <ion-text color=\\\"primary\\\">*</ion-text></ion-label>\\r\\n            <ion-input maxlength=\\\"18\\\"  name=\\\"username\\\" type=\\\"{{passwordType}}\\\" required formControlName=\\\"Password\\\"></ion-input>\\r\\n            <ion-icon name=\\\"{{passwordIcon}}\\\" class=\\\"icon-right\\\" (click)=\\\"onClickPassword()\\\"></ion-icon>\\r\\n            \\r\\n          </ion-item>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.Password.errors?.minlength\\\">Please Enter Valid Password</span>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.Password.errors?.maxlength\\\">Please Enter Valid Password</span>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"12\\\">          \\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"gift-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Referral Code </ion-label>\\r\\n            <ion-input maxlength=\\\"50\\\"  name=\\\"referralCode\\\" type=\\\"text\\\" formControlName=\\\"referralCode\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!-- <ion-row>\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <span class=\\\"error error-outline\\\" *ngIf=\\\"isSubmitted && errorControl.RePassword.errors?.required\\\"></span>\\r\\n          <ion-item class=\\\"ion-no-padding\\\" lines=\\\"none\\\">\\r\\n            <ion-icon name=\\\"lock-closed-outline\\\"></ion-icon>\\r\\n            <ion-label position=\\\"floating\\\">Re-Enter Password</ion-label>\\r\\n            <ion-input maxlength=\\\"18\\\"  name=\\\"username\\\" type=\\\"password\\\" formControlName=\\\"RePassword\\\" required></ion-input>\\r\\n          </ion-item>\\r\\n         \\r\\n        <span class=\\\"error\\\" *ngIf=\\\"errorControl.RePassword.errors?.mustMatch\\\">Password must match</span>\\r\\n        </ion-col>\\r\\n      </ion-row> \\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item class=\\\"ion-no-padding item-checkbox\\\" lines=\\\"none\\\">            \\r\\n            <ion-checkbox slot=\\\"start\\\" formControlName=\\\"IsAgree\\\" required></ion-checkbox>\\r\\n            <ion-label>I agree to the terms and conditions</ion-label>\\r\\n          </ion-item>\\r\\n          <span class=\\\"error\\\" *ngIf=\\\"isSubmitted && errorControl.IsAgree.errors?.required\\\">Please agree to the Terms & Conditions</span>\\r\\n        </ion-col>\\r\\n      </ion-row>   -->   \\r\\n    </ion-grid>\\r\\n    <section class=\\\"btn-cont mb-0\\\">\\r\\n      <ion-button expand=\\\"block\\\" color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!ionicForm.valid || isLoading\\\">Register        \\r\\n        <ion-spinner name=\\\"lines\\\" slot=\\\"end\\\" *ngIf=\\\"isLoading\\\"></ion-spinner>\\r\\n      </ion-button>      \\r\\n    </section>\\r\\n  </form>  \\r\\n</ion-content>\\r\\n<app-footer></app-footer>\\r\\n\";"],"sourceRoot":"webpack:///"}